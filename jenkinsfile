pipeline {
    agent any
    
        tools{
	    maven 'Maven'
	}
	
	stages {
	    stage('Git Progress') {
                steps {
                    git  branch: 'main', credentialsId: 'github_cred', url: 'https://github.com/Shin9184/mvn.git'
                }
            }
	    
	    stage('Build') { 
                steps {
                    sh 'mvn -B -DskipTests clean package' 
                }
            }	    
	
            stage('Test') {
                steps {
                    sh 'mvn test'
                }
                post {
                    always {
                        junit 'target/surefire-reports/*.xml'
                    }
                }
            }
	    
	    stage('Push image') {
                steps {
                    script {
                        checkout scm
                        docker.withRegistry('https://479080306347.dkr.ecr.ap-northeast-2.amazonaws.com', 'ecr:ap-northeast-2:aws_cred') { 
                            def customImage = docker.build("479080306347.dkr.ecr.ap-northeast-2.amazonaws.com/dongsu")
                            customImage.push("${env.BUILD_ID}")
                            customImage.push("latest")
                        }
                    }
                }
            }
	    
	    stage('Push image2') {
                steps {
                    script {
                        checkout scm
			sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i5e7u5l3'
			sh 'docker build -t public.ecr.aws/i5e7u5l3/test:${BUILD_NUMBER} .'
			sh 'docker build -t public.ecr.aws/i5e7u5l3/test .'
			sh 'docker push public.ecr.aws/i5e7u5l3/test:${BUILD_NUMBER}'
			sh 'docker push public.ecr.aws/i5e7u5l3/test:latest'
			
                        //docker.withRegistry('https://479080306347.dkr.ecr.us-east-1.amazonaws.com','ecr:us-east-1:aws_cred') {
                            //def customImage2 = docker.build("public.ecr.aws/i5e7u5l3/test")
                            //customImage2.push("${env.BUILD_ID}")
                            //customImage2.push("latest")
                        //}
                    }
                }
            }
	    
	    stage('Deploy') {
            	steps {
                    script {
                        sshagent (credentials: ['argocd']) {
                            sh "ssh -o StrictHostKeyChecking=no ec2-user@3.34.199.116"
			    sh " kubectl create ns flux"
			    sh "aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 479080306347.dkr.ecr.ap-northeast-2.amazonaws.com"
			    sh "fluxctl install --git-user=Shin9184 --git-email=sds38839184@gmail.com --git-url=git@github.com:Shin9184/springboot.git --git-branch=main --git-path=templates --namespace=flux | kubectl apply -f â€“"
			    sh "kubectl -n flux rollout status deployment/flux"
                    	}
                    }
            	}
            }
	    
	    //stage('Deploy2') {
            	//steps {
                    //script {
                        //sshagent (credentials: ['argocd']) {
                            //sh "ssh -o StrictHostKeyChecking=no ec2-user@13.125.207.83 aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/i5e7u5l3"
			    //sh "ssh -o StrictHostKeyChecking=no ec2-user@13.125.207.83 docker pull public.ecr.aws/i5e7u5l3/test:latest"
                    	//}
                    //}
            	//}
            //}
        
    }
}
